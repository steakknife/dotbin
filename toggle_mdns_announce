#!/bin/sh
set -e

if [ "$UID" != 0 ]; then
  echo 'Rerunning as root' >&2
  exec sudo "$0" "$@"
fi

# --- constants

VISIBLE=0
INVISIBLE=1
PF_INCLUDE_RULE='include "/etc/pf.conf.mdns-disable"'
OSX_VER="$(sw_vers -productVersion)"

# --- functions

get_app_firewall() {
  /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate | grep -q 'enabled'
}

ask() {
  unset ANS
  read -p "$@ (potentially network/app/security disruptive) ? [Yn] " ANS
  if [ "$ANS" != y ] && [ "$ANS" != Y ]; then
    echo 'User abort' >&2
    exit 1
  fi
}

# $1 is on or off
set_app_firewall() { 
  if get_app_firewall; then
    if [ "$1" = on ]; then
      return
    fi
  else
    if [ "$1" = off ]; then
      return
    fi
  fi
  case "$1" in 
    on) ask 'Enable Application Firewall'
      ;;
    off) ask 'Disable Application Firewall'
      ;;
  esac
  /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate "$1" -k
}

pf_enabled() {
  pfctl -s info | grep -q '^Status: Enabled'
}

pf_enable() {
  if pf_enabled; then
    return
  fi
  ask 'Enable pf firewall'
  pfctl -Ef /etc/pf.conf # increment the counter, not just enable it
  if [ -d d /Applications/Server.app/ ]; then
     /Applications/Server.app/Contents/ServerRoot/usr/sbin/serverctl enable service=com.apple.afctl
     if [ -n "$YOSEMITE_OR_NEWER" ]; then
       /Applications/Server.app/Contents/ServerRoot/usr/libexec/afctl -c 
     fi
     /Applications/Server.app/Contents/ServerRoot/usr/libexec/afctl -f
     /usr/libexec/PlistBuddy 'Add :ProgramArguments: string -E' /System/Library/LaunchDaemons/com.apple.pfctl.plist 
  fi 
}


pf_conf_has_include_rule() {
   grep -q "$PF_INCLUDE_RULE" /etc/pf.conf
}

pf_conf_rule_enabled() {
   grep -q "^$PF_INCLUDE_RULE" /etc/pf.conf
}

pf_reload() {
  pf_enable
  pfctl -f /etc/pf.conf 2>/dev/null
}

pf_rules_toggle() {
  if pf_conf_has_include_rule; then
    # existing installation
    if pf_conf_rule_enabled; then
       # make visible
       sed -i '' "s%^$PF_INCLUDE_RULE%# $PF_INCLUDE_RULE%" /etc/pf.conf # disable rules
       pf_reload
       RESULT=$VISIBLE
     else
       # make invisible
       set_app_firewall on
       sed -i '' "s%^#.*$PF_INCLUDE_RULE%$PF_INCLUDE_RULE%" /etc/pf.conf # enable rules
       pf_reload
       RESULT=$INVISIBLE
     fi
  else
    set_app_firewall on
    # new installation, make invisible by default
    tee /etc/pf.conf.mdns-disable << 'PF_CONF_MDNS_DISABLE' >/dev/null
# /etc/pf.conf.mdns-disable
# block mulicast dns (bonjour/avahi/mdns)
block quick inet proto {tcp,udp} from any to any port mdns
block quick inet6 proto {tcp,udp} from any to any port mdns
block quick inet from 224.0.0.251 to any
block quick inet6 from FF02::FB to any
block quick inet from any to 224.0.0.251 # these might be redundant
block quick inet6 from any to FF02::FB   #
PF_CONF_MDNS_DISABLE
    echo "$PF_RULE" | tee -a /etc/pf.conf >/dev/null # add rule
    pf_reload
    RESULT=$INVISIBLE
  fi
}


mDNSResponder_toggle() {
  DOMAIN='/System/Library/LaunchDaemons/com.apple.mDNSResponder'
  PLIST="$DOMAIN.plist"
  if defaults read "$DOMAIN" ProgramArguments | grep -q Multicast; then
    /usr/libexec/PlistBuddy -c 'Delete :ProgramArguments:2' "$PLIST"
    RESULT=$VISIBLE
  else
    /usr/libexec/PlistBuddy -c 'Add :ProgramArguments: string -NoMulticastAdvertisements' "$PLIST"
    RESULT=$INVISIBLE
  fi
  ask 'Restart mDNSResponder'
  launchctl unload "$PLIST"
  launchctl load "$PLIST"
}


# --- code


case "$OSX_VER" in
10.[6-9]*) # <= Mountain Lion 
  unset YOSEMITE_OR_NEWER
  mDNSResponder_toggle
  ;;

10.10*) # Yosemite only
#  if defaults read /System/Library/LaunchDaemons/com.apple.discoveryd ProgramArguments | grep -q no-multicast; then
#    /usr/libexec/PlistBuddy -c 'Delete :ProgramArguments:9' /System/Library/LaunchDaemons/com.apple.discoveryd.plist
#    VISIBLE=1
#  else
#    /usr/libexec/PlistBuddy -c 'Add :ProgramArguments: string --no-multicast' /System/Library/LaunchDaemons/com.apple.discoveryd.plist
#    VISIBLE=0
#  fi
#  launchctl unload /System/Library/LaunchDaemons/com.apple.discoveryd.plist
#  launchctl load /System/Library/LaunchDaemons/com.apple.discoveryd.plist
#
#

  YOSEMITE_OR_NEWER=1
  cat << 'BROKEN' >&2


  The undocumented discoveryd --no-multicast argument breaks Wi-Fi:


      https://discussions.apple.com/message/27090155#27090418

  Using firewall workaround instead.

BROKEN

  pf_rules_toggle

  ;;

*)
  echo "Cannot toggle Bonjour visibility (mdns traffic): unknown OSX version '$OSX_VER' " >&2
  exit 1
esac

case "$RESULT" in
$VISIBLE)
  echo 'This computer is now VISIBLE to other nearby computers (Bonjour - multicast dns (mdns) annoucements enabled)'
  ;;
$INVISIBLE)
  echo 'This computer is now INVISIBLE to other nearby computers (Bonjour - multicast dns (mdns) annoucements disabled)'
  ;;
esac
