#!/usr/bin/env bash
# set IPHONE to your iOS devices' openssh username@hostname
# prints 'sploits found on stderr
# prints absence of 'sploits on stdout
# exit code 1 if any sploits are found
set -e

IPHONE="${IPHONE-root@172.20.10.1}"
SPLOITS="$(grep '^..*().*{' "$0" | sed '/=/d;s/(.*//g')"

# --- every function is assumed to be a 'sploit detector

AppBuyer() {
  cat << PWND
/System/Library/LaunchDaemons/com.archive.plist
/bin/updatesrv
/tmp/updatesrv.log
/etc/uuid
/Library/MobileSubstrate/DynamicLibraries/aid.dylib
/usr/bin/gzip
PWND
}

AdThief() {
  cat << PWND
/Library/MobileSubstrate/DynamicLibraries/spad.dylib
/Library/MobileSubstrate/DynamicLibraries/spad.plist
/Library/MobileSubstrate/DynamicLibraries/libgad.dylib
PWND
}

Unflod() { # aka SSLCreds
  cat << PWND
/Library/MobileSubstrate/DynamicLibraries/Unflod.dylib
PWND
}

WireLurker() {
  cat << PWND
/Library/MobileSubstrate/DynamicLibraries/sfbase.dylib
PWND
}

# ---- main

for SPLOIT in $SPLOITS; do
  ssh $IPHONE "find $($SPLOIT | tr '\n' ' ') -type f 2>/dev/null \
     | sed 's/^/$SPLOIT /g'" \
     | grep --color=none '/' \
  || echo "$SPLOIT not found"
done | tee /dev/stderr | if grep --mmap --color=none '/' >/dev/null; then false; else true; fi
